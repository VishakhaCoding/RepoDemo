package webAuto;


	import java.io.File;
	import java.io.IOException;
	import java.time.Duration;
import java.util.Calendar;
import java.util.List;
import java.util.concurrent.TimeUnit;

	//import org.apache.commons.io.FileUtils;
	import org.openqa.selenium.By;
	import org.openqa.selenium.JavascriptExecutor;
	import org.openqa.selenium.OutputType;
	import org.openqa.selenium.TakesScreenshot;
	import org.openqa.selenium.WebDriver;
	import org.openqa.selenium.WebElement;
	import org.openqa.selenium.chrome.ChromeDriver;
	import org.openqa.selenium.support.ui.ExpectedConditions;
	import org.openqa.selenium.support.ui.WebDriverWait;
	import org.testng.Assert;
	import org.testng.annotations.BeforeClass;
	import org.testng.annotations.Test;

	public class PatientDate {
		public static WebDriver driver;

	    public static String doctorLoginLink="/html/body/app-root/app-home-page/div/div/div/header[2]/div/div[4]/button";
	    public static String mobileNumber="/html/body/app-root/app-signin/div/div/div/div/div[1]/div/div/section/div/div/form/div[2]/input";
	    public static String sendOTP="/html/body/app-root/app-signin/div/div/div/div/div[1]/div/div/section/div/div/form/div[4]/button";
	    public static String verifyOTP="/html/body/app-root/app-signin/div/div/div/div/div[1]/div/div/section/div/div[6]/button";
	    public static String createPatient="createPatient";
	    public static String Number1="/html/body/div[2]/div[2]/div/mat-dialog-container/app-new-onboard-patient/mat-horizontal-stepper/div[2]/div[1]/form/div/div[1]/div[1]/mat-form-field[2]/div/div[1]/div/input";
	    public static String confirm="/html/body/div[2]/div[2]/div/mat-dialog-container/app-new-onboard-patient/mat-horizontal-stepper/div[2]/div[1]/form/div/div[1]/div[1]/div";
	    public static String confirmPopup="//button[text()='Confirm']";
	    public static String number2="/html/body/div[2]/div[2]/div/mat-dialog-container/app-new-onboard-patient/mat-horizontal-stepper/div[2]/div[1]/form/div/div[1]/div[2]/mat-form-field[2]/div/div[1]/div/input";
	    public static String firstName="/html/body/div[2]/div[2]/div/mat-dialog-container/app-new-onboard-patient/mat-horizontal-stepper/div[2]/div[1]/form/div/div[4]/mat-form-field[1]/div/div[1]/div/input";
	    public static String middleName="/html/body/div[2]/div[2]/div/mat-dialog-container/app-new-onboard-patient/mat-horizontal-stepper/div[2]/div[1]/form/div/div[4]/mat-form-field[2]/div/div[1]/div/input";
	    public static String lastName="/html/body/div[2]/div[2]/div/mat-dialog-container/app-new-onboard-patient/mat-horizontal-stepper/div[2]/div[1]/form/div/div[4]/mat-form-field[3]/div/div[1]/div/input";
	    public static String birthDate="/html/body/div[2]/div[2]/div/mat-dialog-container/app-new-onboard-patient/mat-horizontal-stepper/div[2]/div[1]/form/div/div[5]/div[1]/mat-form-field[1]/div/div[1]/div[1]/input";
	    public static String genFemale="//*[text()='Female']";
	    public static String address="/html/body/div[2]/div[2]/div/mat-dialog-container/app-new-onboard-patient/mat-horizontal-stepper/div[2]/div[1]/form/div/div[6]/mat-form-field[1]/div/div[1]/div/input";
	    public static String locality="/html/body/div[2]/div[2]/div/mat-dialog-container/app-new-onboard-patient/mat-horizontal-stepper/div[2]/div[1]/form/div/div[6]/mat-form-field[2]/div/div[1]/div/input";
	    public static String city="/html/body/div[2]/div[2]/div/mat-dialog-container/app-new-onboard-patient/mat-horizontal-stepper/div[2]/div[1]/form/div/div[6]/mat-form-field[3]/div/div[1]/div/input";
	    public static String pinCode="/html/body/div[2]/div[2]/div/mat-dialog-container/app-new-onboard-patient/mat-horizontal-stepper/div[2]/div[1]/form/div/div[7]/mat-form-field/div/div[1]/div/input";
	    public static String Next="/html/body/div[2]/div[2]/div/mat-dialog-container/app-new-onboard-patient/mat-horizontal-stepper/div[2]/div[1]/form/div/div[8]/button[2]";
	    public static String proceedWithSameRMN="/html/body/ngb-modal-window/div/div/div[3]/div/div[2]";
	    public static String clickClose="/html/body/ngb-modal-window/div/div/div[1]/div/button";
	    public static String selectDelivery="/html/body/div[2]/div[2]/div/mat-dialog-container/app-new-onboard-patient/mat-horizontal-stepper/div[2]/div[2]/form/div[2]/div[1]/mat-form-field[3]/div/div[1]/div/mat-select";
	    public static String normalDelivery="//*[text()='Normal']";
	    public static String weight="//*[@id='mat-input-88']";
	    public static String height="//*[@id='mat-input-89']";
	    public static String HC="//*[@id='mat-input-90']";
	    public static String CC="//*[@id='mat-input-91']";
	    public static String BP="//*[@id='mat-input-92']";
	    public static String BPdia="//*[@id='mat-input-93']";
	    public static String vaccinationDate="//*[@id='mat-input-94']";
	    public static String bloodGrp="/html/body/div[2]/div[2]/div/mat-dialog-container/app-new-onboard-patient/mat-horizontal-stepper/div[2]/div[2]/form/div[2]/div[7]/mat-form-field[2]/div/div[1]/div/mat-select/div/div[1]";
	    public static String bloodGrpOplus="//*[text()='O+']";
	    public static String antentalNext="//*[@id='cdk-step-content-0-1']/form/div[2]/div[8]/button[2]";
	    public static String medicalConditions="//*[@id='mat-input-137']";
	    public static String allergies="//*[@id='mat-input-138']";
	    public static String reactionToDrugs="//*[@id='mat-input-139']";
	    public static String recurringComplaints="//*[@id='mat-input-140']";
	    public static String hospitalization="//*[@id='mat-input-141']";
	    public static String healthHistory="//*[@id='mat-input-142']";
	    public static String emailID="//*[@id='mat-input-143']";
	    public static String UHID="//*[@id='mat-input-144']";
	    public static String geneticDisorder="//*[@id='mat-input-144']";
	    public static String healthNext="/html/body/div[2]/div[2]/div/mat-dialog-container/app-new-onboard-patient/mat-horizontal-stepper/div[2]/div[3]/form/div[2]/div[6]/button[2]";
	    public static String fatherHeightFt="//*[@id='mat-input-175']";
	    public static String fatherHeightinch="//*[@id='mat-input-176']";
	    public static String motherHeightFt="//*[@id='mat-input-177']";
	    public static String motherHeightinch="//*[@id='mat-input-178']";
	    public static String familyNext="//*[@id='cdk-step-content-0-3']/div[2]/div[5]/button[2]";
	    public static String success="//*[text()='Success']";
	    public static String age="/html/body/div[2]/div[2]/div/mat-dialog-container/app-new-onboard-patient/mat-horizontal-stepper/div[2]/div[1]/form/div/div[5]/div[1]/mat-form-field[2]/div/div[1]/div/input";
	    public static String familyProfile="/html/body/div[2]/div[2]/div/mat-dialog-container/app-new-onboard-patient/mat-horizontal-stepper/div[1]/mat-step-header[4]/div[3]/div";
	    public static String Done="/html/body/ngb-modal-window/div/div/div[3]/div";
	    public static String ButtonPreviousCalender="/html/body/div[2]/div[4]/div/mat-datepicker-content/div[2]/mat-calendar/mat-calendar-header/div/div/button[3]";
	    public static String SelectDate="/html/body/div[2]/div[4]/div/mat-datepicker-content/div[2]/mat-calendar/div/mat-month-view/table/tbody/tr[3]/td[3]/div[1]";		
	  public static String SelectMonth ="/html/body/div[2]/div[4]/div/mat-datepicker-content/div[2]/mat-calendar/div/mat-year-view/table/tbody/tr[3]/td[4]/div[1]";
	   public static String ClickYearDropdown="/html/body/div[2]/div[4]/div/mat-datepicker-content/div[2]/mat-calendar/mat-calendar-header/div/div/button[1]";
	   public static String clickYear="/html/body/div[2]/div[4]/div/mat-datepicker-content/div[2]/mat-calendar/div/mat-multi-year-view/table/tbody/tr[5]/td[3]/div[1]";
	   public static String OTP1="/html/body/app-root/app-signin/div/div/div/div/div[1]/div/div/section/div/div[3]/div/input[1]"; 
	   public static String OTP2="/html/body/app-root/app-signin/div/div/div/div/div[1]/div/div/section/div/div[3]/div/input[2]"; 
	   public static String OTP3="/html/body/app-root/app-signin/div/div/div/div/div[1]/div/div/section/div/div[3]/div/input[3]"; 
	   public static String OTP4="/html/body/app-root/app-signin/div/div/div/div/div[1]/div/div/section/div/div[3]/div/input[4]";
	   public static String OTP5="/html/body/app-root/app-signin/div/div/div/div/div[1]/div/div/section/div/div[3]/div/input[5]";
	   public static String OTP6="/html/body/app-root/app-signin/div/div/div/div/div[1]/div/div/section/div/div[3]/div/input[6]"; 
	    
	    
	    
	    //*[text()='Done']
	    public static void waitForVisibilityOf(By by) {
	    	 WebDriverWait wait = new WebDriverWait(driver, 50);
	    	    try {
	 
	    	    	driver.manage().timeouts().implicitlyWait(60,TimeUnit.SECONDS);
	    	      //  JavascriptExecutor jse = (JavascriptExecutor)driver;
	    	    }
	    	    catch(Exception e) {
	    	        e.printStackTrace();
	    	    }
	    	
	        }
	        public static void clickUsingJavaScript(By by) {
	       		
	   	 JavascriptExecutor js= (JavascriptExecutor)driver;
	   	 js.executeScript("arguments[0].click();", driver.findElement(by));
	        }
	        
	        public static void highlightElement(By by) {
	   	 JavascriptExecutor js= (JavascriptExecutor)driver;
	   	 js.executeScript("arguments[0].setAttribute('style', 'background: pink; border: 2px solid red;');", driver.findElement(by));
	        }
	        
	        
	        @BeforeClass
	        public void setUp() {
	    	
	            System.setProperty("webdriver.chrome.driver", "D://chromedriver.exe");
			driver = new ChromeDriver();
			driver.manage().timeouts().implicitlyWait(60,TimeUnit.SECONDS);
			driver.manage().deleteAllCookies();
			driver.manage().window().fullscreen();
			//driver.manage().window().maximize();
			driver.get("http://stage.copious.care:4200/");
			driver.manage().window().fullscreen();

			//driver.get("https://opd.copious.care/");

	 }
	        
	        
	        @Test(priority=0)
	    	public  void clickDoctorLoginLink() {
	    	
	    	waitForVisibilityOf(By.xpath(doctorLoginLink));
	    	driver.findElement(By.xpath(doctorLoginLink));
	   	//textbox.sendKeys(Keys.ENTER);
	    	highlightElement(By.xpath(doctorLoginLink));
	    	clickUsingJavaScript(By.xpath(doctorLoginLink));
	   	 
	    	}
	        
	        
	        @Test(priority=1)
	      	public  void numberField() {
	      	waitForVisibilityOf(By.xpath(mobileNumber));
	      	driver.findElement(By.xpath(mobileNumber)).sendKeys("9665002440");
	      	highlightElement(By.xpath(mobileNumber));
	    	clickUsingJavaScript(By.xpath(mobileNumber));
	        }
	        @Test(priority=2)
	        public  void sendOTP() throws InterruptedException {
	     	waitForVisibilityOf(By.xpath(sendOTP));
	       	highlightElement(By.xpath(sendOTP));
	        clickUsingJavaScript(By.xpath(sendOTP));
	        
	        waitForVisibilityOf(By.xpath(OTP1));
	    	driver.findElement(By.xpath(OTP1)).sendKeys("1");;
	    	highlightElement(By.xpath(OTP1));
	    	
	    	waitForVisibilityOf(By.xpath(OTP2));
	    	driver.findElement(By.xpath(OTP2)).sendKeys("4");
	    	highlightElement(By.xpath(OTP2));
	    	
	    	waitForVisibilityOf(By.xpath(OTP3));
	    	driver.findElement(By.xpath(OTP3)).sendKeys("0");;
	    	highlightElement(By.xpath(OTP3));
	    	
	    	waitForVisibilityOf(By.xpath(OTP4));
	    	driver.findElement(By.xpath(OTP4)).sendKeys("5");;
	    	highlightElement(By.xpath(OTP4));
	    	
	    	waitForVisibilityOf(By.xpath(OTP5));
	    	driver.findElement(By.xpath(OTP5)).sendKeys("2");;
	    	highlightElement(By.xpath(OTP5));
	    	
	    	waitForVisibilityOf(By.xpath(OTP6));
	    	driver.findElement(By.xpath(OTP6)).sendKeys("0");;
	    	highlightElement(By.xpath(OTP6));
	        
	        
	        }
	        @Test(priority=3)
	    	public  void verifyButton() throws InterruptedException {
	        	Thread.sleep(40000);
	    	waitForVisibilityOf(By.xpath(verifyOTP));
	    	//driver.findElement(By.xpath(verifyOTP));
	    	highlightElement(By.xpath(verifyOTP));
	    	clickUsingJavaScript(By.xpath(verifyOTP));
	    	}
	       
	        @Test(priority=4)
	     	public  void createPatient() {
	        waitForVisibilityOf(By.id(createPatient));
	     	highlightElement(By.id(createPatient));
	     	clickUsingJavaScript(By.id(createPatient));
	     	//driver.findElement(By.id(createPatient)).click();
	     	}
	        @Test(priority=5)
	      	public  void Number1() {
	      	waitForVisibilityOf(By.xpath(Number1));
	      	driver.findElement(By.xpath(Number1)).sendKeys("1234567891");
	      	highlightElement(By.xpath(Number1));
	    	clickUsingJavaScript(By.xpath(Number1));
	    	
	    	 
	            
	        }
	        @Test(priority=6)
	      	public  void confirm() {
	      	waitForVisibilityOf(By.xpath(confirm));
	      	//driver.findElement(By.xpath(confirm));
	      	highlightElement(By.xpath(confirm));
	    	clickUsingJavaScript(By.xpath(confirm));
	    	waitForVisibilityOf(By.xpath(confirmPopup));
	    	highlightElement(By.xpath(confirmPopup));
	    	clickUsingJavaScript(By.xpath(confirmPopup));
	    	
	    	waitForVisibilityOf(By.xpath(proceedWithSameRMN));
	    	 driver.findElement(By.xpath(proceedWithSameRMN));
	          	highlightElement(By.xpath(proceedWithSameRMN));
	        	clickUsingJavaScript(By.xpath(proceedWithSameRMN));
	        }
	        @Test(priority=8)
	      	public  void number2() {
	      	waitForVisibilityOf(By.xpath(number2));
	      	driver.findElement(By.xpath(number2)).sendKeys("1234567892");;
	      	highlightElement(By.xpath(number2));
	    	clickUsingJavaScript(By.xpath(number2));
	        }
	     

			
			  @Test(priority=9) public void firstName() {
			  waitForVisibilityOf(By.xpath(firstName));
			  driver.findElement(By.xpath(firstName)).sendKeys("Testing");;
			  highlightElement(By.xpath(firstName));
			  clickUsingJavaScript(By.xpath(firstName)); }
			  
			  @Test(priority=10) public void middleName() {
			  waitForVisibilityOf(By.xpath(middleName));
			  driver.findElement(By.xpath(middleName)).sendKeys("Automation");;
			  highlightElement(By.xpath(middleName));
			  clickUsingJavaScript(By.xpath(middleName)); }
			  
			  @Test(priority=11) public void lastName() {
			  waitForVisibilityOf(By.xpath(lastName));
			  driver.findElement(By.xpath(lastName)).sendKeys("Test");;
			  highlightElement(By.xpath(lastName));
			  clickUsingJavaScript(By.xpath(lastName)); }
			 
	        @Test(priority=12)
	      	public  void birthDate() throws InterruptedException {
				/*
				 * waitForVisibilityOf(By.xpath(birthDate)); 
				 * driver.findElement(By.xpath(birthDate)).sendKeys("3");; JavascriptExecutor
				 * js=(JavascriptExecutor) driver;
				 * 
				 * js.executeScript("document.getElementById('mat-input-12').value='3'");
				 * Thread.sleep(3000); highlightElement(By.xpath(birthDate));
				 * 
				 * //clickUsingJavaScript(By.xpath(birthDate));
				 */
	      
	        	
				/*
				 * //DAte and Time to be set in textbox
				 * 
				 * String dateTime ="12/07/2014 2:00 PM";
				 * 
				 * 
				 * 
				 * 
				 * //button to open calendar
				 * 
				 * WebElement selectDate = driver.findElement(By.xpath("birthDate"));
				 * 
				 * selectDate.click();
				 * 
				 * //button to move next in calendar
				 * 
				 * WebElement nextLink = driver.findElement(By.xpath(
				 * "//div[@id='datetimepicker_dateview']//div[@class='k-header']//a[contains(@class,'k-nav-next')]"
				 * ));
				 * 
				 * //button to click in center of calendar header
				 * 
				 * WebElement midLink = driver.findElement(By.xpath(
				 * "//div[@id='datetimepicker_dateview']//div[@class='k-header']//a[contains(@class,'k-nav-fast')]"
				 * ));
				 * 
				 * //button to move previous month in calendar
				 * 
				 * WebElement previousLink = driver.findElement(By.xpath(
				 * "//div[@id='datetimepicker_dateview']//div[@class='k-header']//a[contains(@class,'k-nav-prev')]"
				 * ));
				 * 
				 * //Split the date time to get only the date part
				 * 
				 * String date_dd_MM_yyyy[] = (dateTime.split(" ")[0]).split("/");
				 * 
				 * //get the year difference between current year and year to set in calander
				 * 
				 * int yearDiff = Integer.parseInt(date_dd_MM_yyyy[2])-
				 * Calendar.getInstance().get(Calendar.YEAR);
				 * 
				 * midLink.click();
				 * 
				 * if(yearDiff!=0){
				 * 
				 * //if you have to move next year
				 * 
				 * if(yearDiff>0){
				 * 
				 * for(int i=0;i< yearDiff;i++){
				 * 
				 * System.out.println("Year Diff->"+i);
				 * 
				 * nextLink.click();
				 * 
				 * }
				 * 
				 * }
				 * 
				 * //if you have to move previous year
				 * 
				 * else if(yearDiff<0){
				 * 
				 * for(int i=0;i< (yearDiff*(-1));i++){
				 * 
				 * System.out.println("Year Diff->"+i);
				 * 
				 * previousLink.click();
				 * 
				 * }
				 * 
				 * }
				 * 
				 * }
				 * 
				 * Thread.sleep(1000);
				 * 
				 * //Get all months from calendar to select correct one
				 * 
				 * List<WebElement> list_AllMonthToBook = driver.findElements(By.xpath(
				 * "//div[@id='datetimepicker_dateview']//table//tbody//td[not(contains(@class,'k-other-month'))]"
				 * ));
				 * 
				 * list_AllMonthToBook.get(Integer.parseInt(date_dd_MM_yyyy[1])-1).click();
				 * 
				 * Thread.sleep(1000);
				 * 
				 * //get all dates from calendar to select correct one
				 * 
				 * List<WebElement> list_AllDateToBook = driver.findElements(By.xpath(
				 * "//div[@id='datetimepicker_dateview']//table//tbody//td[not(contains(@class,'k-other-month'))]"
				 * ));
				 * 
				 * list_AllDateToBook.get(Integer.parseInt(date_dd_MM_yyyy[0])-1).click();
				 * 
				 * 
				 * 
				 * 
				 * //get list of times
				 * 
				 * List<WebElement> allTime = driver.findElements(By.
				 * xpath("//div[@data-role='popup'][contains(@style,'display: block')]//ul//li[@role='option']"
				 * ));
				 * 
				 * dateTime = dateTime.split(" ")[1];
				 * 
				 * //select correct time
				 * 
				 * for (WebElement webElement : allTime) {
				 * 
				 * if(webElement.getText().equalsIgnoreCase(dateTime))
				 * 
				 * {
				 * 
				 * webElement.click();
				 * 
				 * }
				 * 
				 * }
				 * 
				 * }
				 */
	        	
	        	waitForVisibilityOf(By.xpath(birthDate));
	        	highlightElement(By.xpath(birthDate));
				 driver.findElement(By.xpath(birthDate));
				 clickUsingJavaScript(By.xpath(birthDate));
				 
				 waitForVisibilityOf(By.xpath(ClickYearDropdown)); 
				 highlightElement(By.xpath(ClickYearDropdown));
				 driver.findElement(By.xpath(ClickYearDropdown));
				 clickUsingJavaScript(By.xpath(ClickYearDropdown));
				 
				 waitForVisibilityOf(By.xpath(clickYear)); 
				 highlightElement(By.xpath(clickYear));
				 driver.findElement(By.xpath(clickYear));
				 clickUsingJavaScript(By.xpath(clickYear));
				 
				
				 
				 waitForVisibilityOf(By.xpath(SelectMonth)); 
				 highlightElement(By.xpath(SelectMonth));
				 driver.findElement(By.xpath(SelectMonth));
				 clickUsingJavaScript(By.xpath(SelectMonth));
				 
				 waitForVisibilityOf(By.xpath(SelectDate)); 
				 highlightElement(By.xpath(SelectDate));
				 driver.findElement(By.xpath(SelectDate));
				 clickUsingJavaScript(By.xpath(SelectDate));
	        }
	
	        
			/*
			 * @Test(priority=13) public void age() { waitForVisibilityOf(By.xpath(age));
			 * driver.findElement(By.xpath(age)).sendKeys("3");;
			 * highlightElement(By.xpath(age)); clickUsingJavaScript(By.xpath(age)); }
			 */
	        @Test(priority=14)
	      	public  void genFemale() {
	      	waitForVisibilityOf(By.xpath(genFemale));
	      	driver.findElement(By.xpath(genFemale));
	      	highlightElement(By.xpath(genFemale));
	    	clickUsingJavaScript(By.xpath(genFemale));
	        }
	        @Test(priority=15)
	      	public  void address() {
	      	waitForVisibilityOf(By.xpath(address));
	      	driver.findElement(By.xpath(address)).sendKeys("Address");;
	      	highlightElement(By.xpath(address));
	    	clickUsingJavaScript(By.xpath(address));
	        }
	        @Test(priority=16)
	      	public  void locality() {
	      	waitForVisibilityOf(By.xpath(locality));
	      	driver.findElement(By.xpath(locality)).sendKeys("locality");
	      	highlightElement(By.xpath(locality));
	    	clickUsingJavaScript(By.xpath(locality));
	        }
	        @Test(priority=17)
	      	public  void city() {
	      	waitForVisibilityOf(By.xpath(city));
	      	driver.findElement(By.xpath(city)).sendKeys("City");;
	      	highlightElement(By.xpath(city));
	    	clickUsingJavaScript(By.xpath(city));
	        }
	        @Test(priority=18)
	      	public  void pinCode() {
	      	waitForVisibilityOf(By.xpath(pinCode));
	      	driver.findElement(By.xpath(pinCode)).sendKeys("412306");
	      	highlightElement(By.xpath(pinCode));
	    	clickUsingJavaScript(By.xpath(pinCode));
	        }
	        @Test(priority=19)
	        public void nextButton() {
	            waitForVisibilityOf(By.xpath(Next));
	          driver.findElement(By.xpath(Next));
	          	highlightElement(By.xpath(Next));
	        	clickUsingJavaScript(By.xpath(Next));
	            
	        }
	        @Test(priority=7)
	        public void proceedWithSameRMN() {
	            waitForVisibilityOf(By.xpath(proceedWithSameRMN));
	           
	          	highlightElement(By.xpath(proceedWithSameRMN));
	        	clickUsingJavaScript(By.xpath(proceedWithSameRMN));
	        }
	}
	            
	      /*  }
	        @Test(priority=19)
	        public void clickClose() {
	            waitForVisibilityOf(By.xpath(clickClose));
	           
	          	highlightElement(By.xpath(clickClose));
	        	clickUsingJavaScript(By.xpath(clickClose));
	            
	        }
	        @Test(priority=20)
	        public void fillVitalForm() {
	            waitForVisibilityOf(By.xpath(selectDelivery));
	           
	          	highlightElement(By.xpath(selectDelivery));
	        	clickUsingJavaScript(By.xpath(selectDelivery));
	        	  waitForVisibilityOf(By.xpath(normalDelivery));
	            	highlightElement(By.xpath(normalDelivery));
	          	clickUsingJavaScript(By.xpath(normalDelivery));
	          	
	        	highlightElement(By.xpath(height));
	        	driver.findElement(By.xpath(height)).sendKeys("4");
	          	
	        	highlightElement(By.xpath(weight));
	        	driver.findElement(By.xpath(weight)).sendKeys("4");
	          	
	        	highlightElement(By.xpath(HC));
	        	driver.findElement(By.xpath(HC)).sendKeys("4");
	          	
	        	highlightElement(By.xpath(CC));
	        	driver.findElement(By.xpath(CC)).sendKeys("4");
	          	
	        	highlightElement(By.xpath(BP));
	        	driver.findElement(By.xpath(BP)).sendKeys("4");
	          	
	        	highlightElement(By.xpath(BPdia));
	          	driver.findElement(By.xpath(BPdia)).sendKeys("4");
	          	
	        	highlightElement(By.xpath(vaccinationDate));
	        	driver.findElement(By.xpath(vaccinationDate)).sendKeys("03/01/2019");
	          	
	        
	          	
	        	highlightElement(By.xpath(bloodGrp));
	          	clickUsingJavaScript(By.xpath(bloodGrp));
	            
	          	highlightElement(By.xpath(bloodGrpOplus));
	          	clickUsingJavaScript(By.xpath(bloodGrpOplus));
	          	highlightElement(By.xpath(antentalNext));
	          	clickUsingJavaScript(By.xpath(antentalNext));
	          	
	        }
	        @Test(priority=21)
	        public void fillHealthProfile() {
	            waitForVisibilityOf(By.xpath(allergies));
	           
	          	highlightElement(By.xpath(allergies));
	          	driver.findElement(By.xpath(allergies)).sendKeys("None");

	        	highlightElement(By.xpath(reactionToDrugs));
	          	driver.findElement(By.xpath(allergies)).sendKeys("None");
	          	
	        	highlightElement(By.xpath(recurringComplaints));
	          	driver.findElement(By.xpath(recurringComplaints)).sendKeys("None");
	          	
	        	highlightElement(By.xpath(hospitalization));
	          	driver.findElement(By.xpath(hospitalization)).sendKeys("None");
	          	
	        	highlightElement(By.xpath(healthHistory));
	          	driver.findElement(By.xpath(healthHistory)).sendKeys("None");
	          	
	        	highlightElement(By.xpath(emailID));
	          	driver.findElement(By.xpath(emailID)).sendKeys("vishu@123testtest.com");
	          	
	        	highlightElement(By.xpath(UHID));
	          	driver.findElement(By.xpath(UHID)).sendKeys("None");
	          	
	        	highlightElement(By.xpath(healthNext));
	          	driver.findElement(By.xpath(healthNext));
	          	clickUsingJavaScript(By.xpath(healthNext));
	          	
	          	//highlightElement(By.xpath(familyProfile));
	          	//driver.findElement(By.xpath(familyProfile));
	            
	        }
	        @Test(priority=22)
	        public void fillFamilyProfile() {
	            waitForVisibilityOf(By.xpath(fatherHeightFt));
	           
	          	highlightElement(By.xpath(fatherHeightFt));
	          	driver.findElement(By.xpath(fatherHeightFt)).sendKeys("5");
	        	
	        	highlightElement(By.xpath(fatherHeightinch));
	        	driver.findElement(By.xpath(fatherHeightinch)).sendKeys("10");
	        	
	        	highlightElement(By.xpath(motherHeightFt));
	        	driver.findElement(By.xpath(motherHeightFt)).sendKeys("5");
	        	
	        	highlightElement(By.xpath(motherHeightinch));
	        	driver.findElement(By.xpath(motherHeightinch)).sendKeys("4");
	        	
	        	highlightElement(By.xpath(familyNext));
	        	driver.findElement(By.xpath(familyNext));
	        	clickUsingJavaScript(By.xpath(familyNext));
	        	
	        	highlightElement(By.xpath(Done));
	        	driver.findElement(By.xpath(Done));
	        	clickUsingJavaScript(By.xpath(Done));
	        	
	        	
	        	//waitForVisibilityOf(By.xpath(success));
	            //Assert.assertEquals("success", driver.findElement(By.xpath(success)).getText());
	        }*/
	
		


